#!/usr/bin/python3

import time
import math
import sys

#implementing Pollard rho algorithm

def poll_rho(num):
    if num % 2 == 0:
        return 2
    
    x = 2
    y = 2
    d = 1
    
    func = lambda x: (x**2 + 1) % num
    
    while d == 1:
        x = func(x)
        y = func(func(y))
        d = math.gcd(abs(x - y), num)
    
    return d

def main():

    if len(sys.argv) != 2:
        print("Usage: python factorize.py <file>")
        return

    file_dest = sys.argv[1]

    begin_time = time.time()
    try:
    	with open(file_dest, 'r') as file:
	      numbers = file.readlines()
    	for number in numbers:
            num = int(number.strip())

            factor = poll_rho(num)
            if factor == num:
                print(f"{num} is prime.")
            else:
                print(f"{num}={factor}*{num // factor}")
     	
    	if time.time() - begin_time > 5:
            	print("Time limit exceeded")
            	exit()
    
    except FileNotFoundError:
        print(f"File '{file_dest}' not found.")


if __name__ == '__main__':
    main()
